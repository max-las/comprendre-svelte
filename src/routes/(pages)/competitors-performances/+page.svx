<style lang="scss">
	.normal-flow {
		width: 100%;

		&.benchmark {
			max-width: 1000px;
		}

		&.virtual-dom {
			max-width: 600px;
		}
	}
</style>

<script lang="ts">
	import siteData from "$lib/site-data.json";
	import { onMount } from "svelte";
	import PhotoSwipeLightbox from 'photoswipe/lightbox';
	import PhotoSwipe from 'photoswipe';

	onMount(() => {
		const lightbox = new PhotoSwipeLightbox({
			arrowPrev: false,
			arrowNext: false,
			gallery: '.pswp-gallery',
			children: 'a',
			pswpModule: () => PhotoSwipe
		});
		lightbox.init()
	});
</script>

<svelte:head>
	<title>Les performances des concurrents | { siteData.title }</title>
</svelte:head>

# Les perfomances des concurrents

Au-delà de la syntaxe, Svelte se différencie également de [React](https://fr.reactjs.org/) et [Vue.js](https://vuejs.org/) par ses perfomances.

Voici un tableau comparant les trois frameworks en termes de temps nécessaire pour effectuer certaines tâches, de rapidité de démarrage, et de mémoire consommée :

<div class="pswp-gallery pswp-gallery--single-column">
  <a href="/images/benchmark.webp" 
    data-pswp-width="2677" 
    data-pswp-height="2006" 
    target="_blank"
		rel="noreferrer" >
    <img
			class="normal-flow benchmark"
			src="/images/benchmark.webp"
			alt="Données de perfomances Svelte VS Vue VS React" />
  </a>
</div>

Globalement, on remarque que React est à la traîne dans presque tous les domaines, et que Svelte l'emporte dans l'immense majorité des cas, bien que l'écart avec Vue soit nettement moindre qu'avec React. Pour certaines tâches, Vue se montre toutefois légèrement plus rapide que Svelte.

Comment cela est-il possible ?

<div class="pswp-gallery pswp-gallery--single-column">
  <a href="/images/virtual-dom.webp" 
    data-pswp-width="1024" 
    data-pswp-height="685" 
    target="_blank"
		rel="noreferrer" >
    <img
			class="normal-flow virtual-dom"
			src="/images/virtual-dom.webp"
			alt="Schéma du DOM virtuel" />
  </a>
</div>
